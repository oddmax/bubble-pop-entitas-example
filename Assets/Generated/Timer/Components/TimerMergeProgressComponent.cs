//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimerContext {

    public TimerEntity mergeProgressEntity { get { return GetGroup(TimerMatcher.MergeProgress).GetSingleEntity(); } }
    public MergeProgressComponent mergeProgress { get { return mergeProgressEntity.mergeProgress; } }
    public bool hasMergeProgress { get { return mergeProgressEntity != null; } }

    public TimerEntity SetMergeProgress(UnityEngine.Vector2Int newMergeBubblePosition, int newMergeNumber, float newTime) {
        if (hasMergeProgress) {
            throw new Entitas.EntitasException("Could not set MergeProgress!\n" + this + " already has an entity with MergeProgressComponent!",
                "You should check if the context already has a mergeProgressEntity before setting it or use context.ReplaceMergeProgress().");
        }
        var entity = CreateEntity();
        entity.AddMergeProgress(newMergeBubblePosition, newMergeNumber, newTime);
        return entity;
    }

    public void ReplaceMergeProgress(UnityEngine.Vector2Int newMergeBubblePosition, int newMergeNumber, float newTime) {
        var entity = mergeProgressEntity;
        if (entity == null) {
            entity = SetMergeProgress(newMergeBubblePosition, newMergeNumber, newTime);
        } else {
            entity.ReplaceMergeProgress(newMergeBubblePosition, newMergeNumber, newTime);
        }
    }

    public void RemoveMergeProgress() {
        mergeProgressEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimerEntity {

    public MergeProgressComponent mergeProgress { get { return (MergeProgressComponent)GetComponent(TimerComponentsLookup.MergeProgress); } }
    public bool hasMergeProgress { get { return HasComponent(TimerComponentsLookup.MergeProgress); } }

    public void AddMergeProgress(UnityEngine.Vector2Int newMergeBubblePosition, int newMergeNumber, float newTime) {
        var index = TimerComponentsLookup.MergeProgress;
        var component = (MergeProgressComponent)CreateComponent(index, typeof(MergeProgressComponent));
        component.mergeBubblePosition = newMergeBubblePosition;
        component.mergeNumber = newMergeNumber;
        component.time = newTime;
        AddComponent(index, component);
    }

    public void ReplaceMergeProgress(UnityEngine.Vector2Int newMergeBubblePosition, int newMergeNumber, float newTime) {
        var index = TimerComponentsLookup.MergeProgress;
        var component = (MergeProgressComponent)CreateComponent(index, typeof(MergeProgressComponent));
        component.mergeBubblePosition = newMergeBubblePosition;
        component.mergeNumber = newMergeNumber;
        component.time = newTime;
        ReplaceComponent(index, component);
    }

    public void RemoveMergeProgress() {
        RemoveComponent(TimerComponentsLookup.MergeProgress);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TimerMatcher {

    static Entitas.IMatcher<TimerEntity> _matcherMergeProgress;

    public static Entitas.IMatcher<TimerEntity> MergeProgress {
        get {
            if (_matcherMergeProgress == null) {
                var matcher = (Entitas.Matcher<TimerEntity>)Entitas.Matcher<TimerEntity>.AllOf(TimerComponentsLookup.MergeProgress);
                matcher.componentNames = TimerComponentsLookup.componentNames;
                _matcherMergeProgress = matcher;
            }

            return _matcherMergeProgress;
        }
    }
}
