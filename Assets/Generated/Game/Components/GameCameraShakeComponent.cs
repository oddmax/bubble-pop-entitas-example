//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity cameraShakeEntity { get { return GetGroup(GameMatcher.CameraShake).GetSingleEntity(); } }
    public CameraShakeComponent cameraShake { get { return cameraShakeEntity.cameraShake; } }
    public bool hasCameraShake { get { return cameraShakeEntity != null; } }

    public GameEntity SetCameraShake(int newAmountOfShakes) {
        if (hasCameraShake) {
            throw new Entitas.EntitasException("Could not set CameraShake!\n" + this + " already has an entity with CameraShakeComponent!",
                "You should check if the context already has a cameraShakeEntity before setting it or use context.ReplaceCameraShake().");
        }
        var entity = CreateEntity();
        entity.AddCameraShake(newAmountOfShakes);
        return entity;
    }

    public void ReplaceCameraShake(int newAmountOfShakes) {
        var entity = cameraShakeEntity;
        if (entity == null) {
            entity = SetCameraShake(newAmountOfShakes);
        } else {
            entity.ReplaceCameraShake(newAmountOfShakes);
        }
    }

    public void RemoveCameraShake() {
        cameraShakeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CameraShakeComponent cameraShake { get { return (CameraShakeComponent)GetComponent(GameComponentsLookup.CameraShake); } }
    public bool hasCameraShake { get { return HasComponent(GameComponentsLookup.CameraShake); } }

    public void AddCameraShake(int newAmountOfShakes) {
        var index = GameComponentsLookup.CameraShake;
        var component = (CameraShakeComponent)CreateComponent(index, typeof(CameraShakeComponent));
        component.amountOfShakes = newAmountOfShakes;
        AddComponent(index, component);
    }

    public void ReplaceCameraShake(int newAmountOfShakes) {
        var index = GameComponentsLookup.CameraShake;
        var component = (CameraShakeComponent)CreateComponent(index, typeof(CameraShakeComponent));
        component.amountOfShakes = newAmountOfShakes;
        ReplaceComponent(index, component);
    }

    public void RemoveCameraShake() {
        RemoveComponent(GameComponentsLookup.CameraShake);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraShake;

    public static Entitas.IMatcher<GameEntity> CameraShake {
        get {
            if (_matcherCameraShake == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraShake);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraShake = matcher;
            }

            return _matcherCameraShake;
        }
    }
}
