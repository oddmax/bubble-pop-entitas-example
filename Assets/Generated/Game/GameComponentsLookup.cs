//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int AnyCameraShakeListener = 0;
    public const int Asset = 1;
    public const int BoardCleaningHangingClusters = 2;
    public const int Board = 3;
    public const int Bubble = 4;
    public const int BubbleNumber = 5;
    public const int BubbleNumberListener = 6;
    public const int BubblePreview = 7;
    public const int CameraShake = 8;
    public const int ConnectedToTop = 9;
    public const int Destroyed = 10;
    public const int DestroyedListener = 11;
    public const int Falling = 12;
    public const int FallingListener = 13;
    public const int FlyingBubble = 14;
    public const int LaunchBubble = 15;
    public const int Launcher = 16;
    public const int LauncherTrajectory = 17;
    public const int LauncherTrajectoryListener = 18;
    public const int Merge = 19;
    public const int MergeTarget = 20;
    public const int MergeTargetListener = 21;
    public const int MoveComplete = 22;
    public const int NewBubble = 23;
    public const int Particle = 24;
    public const int Position = 25;
    public const int PositionListener = 26;
    public const int StartPosition = 27;
    public const int TextSpawn = 28;
    public const int TransformPosition = 29;
    public const int TransformPositionListener = 30;
    public const int View = 31;
    public const int Visible = 32;
    public const int VisibleListener = 33;

    public const int TotalComponents = 34;

    public static readonly string[] componentNames = {
        "AnyCameraShakeListener",
        "Asset",
        "BoardCleaningHangingClusters",
        "Board",
        "Bubble",
        "BubbleNumber",
        "BubbleNumberListener",
        "BubblePreview",
        "CameraShake",
        "ConnectedToTop",
        "Destroyed",
        "DestroyedListener",
        "Falling",
        "FallingListener",
        "FlyingBubble",
        "LaunchBubble",
        "Launcher",
        "LauncherTrajectory",
        "LauncherTrajectoryListener",
        "Merge",
        "MergeTarget",
        "MergeTargetListener",
        "MoveComplete",
        "NewBubble",
        "Particle",
        "Position",
        "PositionListener",
        "StartPosition",
        "TextSpawn",
        "TransformPosition",
        "TransformPositionListener",
        "View",
        "Visible",
        "VisibleListener"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(AnyCameraShakeListenerComponent),
        typeof(AssetComponent),
        typeof(BoardCleaningHangingClustersComponent),
        typeof(BoardComponent),
        typeof(BubbleComponent),
        typeof(BubbleNumberComponent),
        typeof(BubbleNumberListenerComponent),
        typeof(BubblePreviewComponent),
        typeof(CameraShakeComponent),
        typeof(ConnectedToTopComponent),
        typeof(DestroyedComponent),
        typeof(DestroyedListenerComponent),
        typeof(FallingComponent),
        typeof(FallingListenerComponent),
        typeof(FlyingBubbleComponent),
        typeof(LaunchBubbleComponent),
        typeof(LauncherComponent),
        typeof(LauncherTrajectoryComponent),
        typeof(LauncherTrajectoryListenerComponent),
        typeof(MergeComponent),
        typeof(MergeTargetComponent),
        typeof(MergeTargetListenerComponent),
        typeof(MoveCompleteComponent),
        typeof(NewBubbleComponent),
        typeof(ParticleComponent),
        typeof(PositionComponent),
        typeof(PositionListenerComponent),
        typeof(StartPositionComponent),
        typeof(TextSpawnComponent),
        typeof(TransformPositionComponent),
        typeof(TransformPositionListenerComponent),
        typeof(ViewComponent),
        typeof(VisibleComponent),
        typeof(VisibleListenerComponent)
    };
}
